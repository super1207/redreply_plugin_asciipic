[{"content":{"code":"\n【定义变量@图片@【智能取图片】】\n【定义变量@图片格式@【取元素【图片信息【变量@图片】】@格式】】\n【判断【变量@图片格式】@gif@\n\t【定义变量@图片@【图片大小调整@【变量@图片】@150@0】】\n\t【隐藏【转字符画【变量@图片】】】\n\t[CQ:reply,id=【CQ码转义【消息ID】】]\n\t【图片【传递】】\n@\n\n\t【定义变量@gif数组@【gif分解【变量@图片】】】 \n\t【隐藏【循环【变量@gif数组】@【函数定义\n\t\t【定义变量@图片2@【图片大小调整@【参数@2】@150@0】】\n\t\t【数组【转字符画【变量@图片2】】】\n\t】】】\n\t[CQ:reply,id=【CQ码转义【消息ID】】]\n\t【图片【gif合成【传递】@100】】\n】\n\n\n\n","关键词":"#字符画","匹配方式":"前缀匹配","触发方式":"群聊触发"},"description":"需要安装python哦~","name":"字符画"},{"content":{"code":"## 获取一张图片\n【定义命令@智能取图片@【调用函数【函数定义@\n\t【判等@【取长度【取图片】】@0@\n\t\t【访问@【取元素【取图片】@0】】\n\t\t@\n \t\t【屏蔽【输出流@请在30秒内发送一张图片】】\n\t\t【定义变量@输入@【输入流@30000】】\n\t\t【定义变量@图片url@【取元素【取图片【变量@输入】】@0】】\n \t\t【访问【变量@图片url】】\n\t】\n】】】\n\n【定义命令@转字符画@\n\n【隐藏【快速运行PY【@\ntry:\n\timport PIL.Image as Image\n\timport PIL.ImageDraw as ImageDraw\n\timport PIL.ImageFont as ImageFont\nexcept:\n\tred_install(\"pillow\")\n\timport PIL.Image as Image\n\timport PIL.ImageDraw as ImageDraw\n\timport PIL.ImageFont as ImageFont\n\nimport base64\nimport io\n\n\n# 定义黑白 ASCII 字符画绘图字体大小\nbw_ascii_image_font_size = 8\n\n# 定义黑白 ASCII 字符画替换像素的 ASCII 字符\nbw_ascii_chars = \"@%#*+=-:. \"\n\n# 将图像调整为指定大小\ndef resize_image(image_b64):\n  byte_data = base64.b64decode(image_b64)\n  image = Image.open(io.BytesIO(byte_data))\n  # image = Image.open(image_path)\n  # image = image.resize((output_width, output_height))\n  return image\n\n# 将图像转换为灰度图像\ndef convert_to_gray(image):   \n  return image.convert('L')\n\n# 将像素映射为 ASCII 字符\ndef map_pixels_to_ascii(gray_image, ascii_chars):\n  ascii_image = []\n\n  for y in range(gray_image.height):\n    row = \"\"\n    for x in range(gray_image.width):\n      gray_value = gray_image.getpixel((x, y))\n      char_index = int(gray_value / 255 * (len(ascii_chars) - 1))\n      row += ascii_chars[char_index]\n    ascii_image.append(row)\n\n  return \"\\n\".join(ascii_image)\n\n\n# 将图像转换为黑白 ASCII 字符画\ndef image_to_bw_ascii(image_b64):\n  resized_image = resize_image(image_b64)\n\n  gray_image = convert_to_gray(resized_image)   \n\n  ascii_image = map_pixels_to_ascii(gray_image, bw_ascii_chars)\n\n  return ascii_image\n\n# 存储黑白 ASCII 字符画到图片\ndef save_bw_ascii_image_as_picture(ascii_image, font_size):\n  lines = ascii_image.split('\\n')\n  width = max(len(line) for line in lines)\n  height = len(lines)\n\n  image = Image.new('RGB', ((width * font_size), height * font_size), color='white')\n  draw = ImageDraw.Draw(image)\n  for y, line in enumerate(lines):\n    for x, char in enumerate(line):\n      draw.text((x * font_size, y * font_size), char, fill='black')\n\n  buffer = io.BytesIO()\n  image.save(buffer,format=\"png\")\n  myimage = buffer.getvalue()\n  return base64.b64encode(myimage).decode()\n\n\n\nimage_b64 = red_in()\n\n# 生成黑白 ASCII 字符画\nbw_ascii_image = image_to_bw_ascii(image_b64)\n\n# 存储黑白 ASCII 字符画到图片文件\nout_b64 = save_bw_ascii_image_as_picture(bw_ascii_image,bw_ascii_image_font_size )\n\nred_out(out_b64)\n\n】@【base64编码@【参数@1】】】】\n【base64解码【传递】】\n】\n","关键词":"","匹配方式":"完全匹配","触发方式":"框架初始化"},"description":"需要安装python哦~","name":"初始化"},{"content":{"code":"【错误信息】\n","关键词":"错误打印","匹配方式":"完全匹配","触发方式":"脚本错误"},"description":"需要安装python哦~","name":"错误打印"}]